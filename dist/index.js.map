{"version":3,"file":"index.js","sources":["../src/check.svg","../src/error.svg","../src/info.svg","../src/warning.svg","../src/close.svg","../src/index.tsx"],"sourcesContent":["/* loaded by smart-asset */\nexport default require(\"./check~YAqNKjRx.svg\")","/* loaded by smart-asset */\nexport default require(\"./error~oAuuRnLQ.svg\")","/* loaded by smart-asset */\nexport default require(\"./info~YHVUvgRi.svg\")","/* loaded by smart-asset */\nexport default require(\"./warning~kxHVRSgn.svg\")","/* loaded by smart-asset */\nexport default require(\"./close~CpoGlLRi.svg\")","import React, { useEffect, useState } from 'react'\r\nimport done from './check.svg'\r\nimport error from './error.svg'\r\nimport info from './info.svg'\r\nimport warning from './warning.svg'\r\nimport close from './close.svg'\r\nimport Style from './styles.module.css'\r\n\r\ntype Props = {\r\n  type: string,\r\n  title: string,\r\n  description: string,\r\n  position: string,\r\n  duration: number,\r\n  closeButton: boolean\r\n}\r\n\r\ninterface ToastProps {\r\n  title: string,\r\n  description: string,\r\n  backgroundColor: string,\r\n  icon: string\r\n}\r\n\r\n\r\nexport const Toast = ({ type, title, description, position, duration, closeButton = false }: Props): JSX.Element => {\r\n  const [toast, setToast] = useState<ToastProps[]>([])\r\n\r\n  useEffect(() => {\r\n    setToastType(type)\r\n    // eslint-disable-next-line\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (toast.length) {\r\n        closeToast(toast[0].title);\r\n      }\r\n    }, duration);\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [toast]);\r\n\r\n\r\n  const setToastType = (type: string) => {\r\n    switch (type) {\r\n      case 'success':\r\n        setToast([...toast, { title, description, backgroundColor: '#2ea05d', icon: done }])\r\n        break;\r\n      case 'error':\r\n        setToast([...toast, { title, description, backgroundColor: '#E53E3E', icon: error }])\r\n        break;\r\n      case 'info':\r\n        setToast([...toast, { title, description, backgroundColor: '#3182ce', icon: info }])\r\n        break;\r\n      case 'warning':\r\n        setToast([{ ...toast, title, description, backgroundColor: '#DD6B20', icon: warning }])\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  const closeToast = (title: string) => {\r\n    const index = toast.findIndex(e => e.title === title);\r\n    toast.splice(index, 1);\r\n    setToast([...toast]);\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={`${Style.toastcontainer}  ${Style[position]}`} style={{ animationDuration: `${duration + 500 + 'ms'}` }}>\r\n      {\r\n        toast.map((toast, i) =>\r\n          <div\r\n            key={i}\r\n            className={`${Style.toast} ${Style.toastsupersnack}  ${Style[position]}`}\r\n            style={{ backgroundColor: toast.backgroundColor, animationDuration: `${duration + 500 + 'ms'}` }}\r\n          >\r\n            {closeButton && <img className={`${Style.toastclosebutton}`} src={close} alt=\"close-button\" onClick={() => closeToast(toast.title)} />}\r\n            <div className={`${Style.toastimage}`}>\r\n              <img src={toast.icon} alt=\"\" />\r\n            </div>\r\n            <div>\r\n              <p className={`${Style.toasttitle}`}>{toast.title}</p>\r\n              <p className={`${Style.toastdescription}`}>\r\n                {toast.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"names":["require","Toast","type","title","description","position","duration","closeButton","useState","toast","setToast","useEffect","setToastType","interval","setInterval","length","closeToast","clearInterval","backgroundColor","icon","done","error","info","warning","index","findIndex","e","splice","React","className","Style","toastcontainer","style","animationDuration","map","i","key","toastsupersnack","toastclosebutton","src","close","alt","onClick","toastimage","toasttitle","toastdescription"],"mappings":"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"}